#!/bin/bash

DEFAULT_MSG="common update"
RETRY=1
CURRENT_BRANCH=$(git branch --show-current)

tolower() {
   echo $1 | awk '{print tolower($0)}'
}

function log() {
   if [[ $LOG -eq 1 ]]; then
      echo "$1"
   fi
}

function readStd() {
   log "reading stdin"
   while read -r line; do
      DIFFS="$DIFFS$line"
   done
}

while [[ "$#" -gt 0 ]]; do
    case $1 in
        -g|--global) GLOBAL=1; ;;
        #-r|--retry) RETRY=1; ;;
        -v|--verbose) LOG=1; ;;
        -) readStd; shift ;;
        *) echo "Unknown parameter passed: $1"; exit 1 ;;
    esac
    shift
done

function use_global() {
   log "using global"
   MAIN=$(git symbolic-ref refs/remotes/origin/HEAD)
   MAIN="${MAIN##*/}"
   DIFFS=$(git diff --oneline --no-merges $MAIN..$CURRENT_BRANCH)
}

if [[ $GLOBAL -eq 1 ]]; then
   use_global
elif [ -z "$DIFFS" ]; then
   DIFFS=$(git diff)
fi

SIZE=${#DIFFS}
log "current message size: $SIZE"

if [ $SIZE -lt 10 ]; then
    echo "Not too much changes. Exiting with default message"
    export AI_MESSAGE_AUTOCOMMIT=$DEFAULT_MSG
    exit 0
 elif [ $SIZE -gt 500000 ]; then
   log "too much message size: $SIZE, fallback to global usage"
   use_global
fi

# TODO add prompts
arr=("$PROMPT1" "$PROMPT2")

next_prompt() {

    TEMP_MSG_FILE=/tmp/ghelp_autocommit_$(date +%H%M%S).tmp
    log "Making 'LLM' request with conent:"
    log "$ELEMENT"

    MESSAGE=$(jllama --role-name git-autocommit generate "$DIFFS")
    
    echo "$MESSAGE" > $TEMP_MSG_FILE
    cat $TEMP_MSG_FILE

    export AI_MESSAGE_AUTOCOMMIT="$MESSAGE"
}

call() {

    next_prompt

    read -p "Accept message? (Y/N): " ACCEPT <&1

    ACCEPT=$(tolower $ACCEPT)

    if ! [[ -z "${ACCEPT}" || "$ACCEPT" = "y" ]]; then 
       read -p "Try another prompt? (Y/N) : " ANOTHER <&1
        ANOTHER=$(tolower $ANOTHER)

        if [[ -z "${ANOTHER}" || "$ANOTHER" == "y" ]]; then 
            call
        else 
            exit 0
        fi
     else 
      read -r -p "Edit message? (Y/N) : " EDIT <&1
      EDIT=$(tolower $EDIT)
      if [[ -z "${EDIT}" || "$EDIT" == "y" ]]; then
         vim "$TEMP_MSG_FILE" <&1
         MESSAGE=$(cat $TEMP_MSG_FILE) 
         export AI_MESSAGE_AUTOCOMMIT="$MESSAGE"
      fi
    fi
}

if [ $RETRY -eq 1 ]; then
    call
else 
    next_prompt
fi

